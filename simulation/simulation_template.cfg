#----------------#
### Simulation ###
#----------------#

simulation_number = [int]
discrete_simulation = [True| ]
topology = [carrier|pico|gwin]
request_type = [simple|test|multi]
orchestrator = [offline|online|hybrid]
dump_freq = [int]
request_arrival_lambda = [float]
request_lifetime_lambda = [float]
max_number_of_iterations = [int]
wait_all_req_expire = [True| ]
request_max_lat = [float]
request_min_lat = [float]
request_nf_type_count = [int]
request_seed = [int]

#------------------------------------#
### Hybrid specific configurations ###
#------------------------------------#
#These values will be used only in case of hybrid orchestrator

what_to_optimize = [all_reqs|reqs_since_last]
when_to_optimize = [allways|modell_based|fixed_req_count|fixed_time|periodical_model_based]
when_to_opt_parameter = [int]
resource_share_strat = [double_hundred|dynamic]

#-------------------------------------#
### Online specific configurations ###
#-------------------------------------#
enable_shortest_path_cache = [True| ]
bw_factor = [int]
res_factor = [int]
lat_factor = [int]
shortest_paths = None
return_dist = [True| ]
propagate_e2e_reqs = [True| ]
bt_limit = [int]
bt_branching_factor = [int]

#-------------------------------------#
### Offline specific configurations ###
#-------------------------------------#

optimize_already_mapped_nfs = True
migration_coeff = [float]
load_balance_coeff = [float]
edge_cost_coeff = [float]
migration_handler_name = [class name from milp/migration_costs.py]
# parameters of the migration cost handler class should be added here as key
# value pairs.
[migration_handler_kwargs]
const_cost = [float]
